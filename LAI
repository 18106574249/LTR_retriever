#!/usr/bin/perl -w
use strict;
##This script is to extract coordinate information for intact LTRs and all LTRs to calculate the LAI score
##Users should provide the LTR_retriever *pass.list file and the RepeatMasker *out file as inputs
##Usage: perl ./LAI intact.pass.list genome.out genome.fa
##Author: Shujun Ou (oushujun@msu.edu)
##First version: 11/23/2016


my $script_path=`readlink -fn -- $0`;
$script_path=~s/(.+)\/.+$/$1/;
my $usage="perl ./LAI intact.pass.list genome.out genome.fa -w [int(bp)]*
*Optional: -w to set window size. Default: 2000000 (2 Mb)\n";
die $usage unless $#ARGV>=2;
die $usage unless (-s "$ARGV[0]" and -s "$ARGV[1]" and -s "$ARGV[2]");
my $win="2000000";
if (defined $ARGV[3]){
	$win=$ARGV[4] if $ARGV[3] eq "-w";
	}

#convert intact LTR information into bed format
`perl -ne 'my (\$id, \$age)=(split)[0,11]; \$age=4000000 if \$age eq \"NA\"; next unless \$id=~/:/; \$id=~s/\\.\\./\\t/g; \$id=~s/:/\\t/g; print "\$id\\t\$age\\n"' $ARGV[0] > $ARGV[0].bed`;
`perl $script_path/bin/combine_overlap.pl $ARGV[0].bed $ARGV[0].bed.cbi -age`;

#get all LTR sequence annotated in the genome that are no shorter than 80bp
`awk '{if (\$6~/[0-9]/ && \$7-\$6>=80)print \$5"\\t"\$6"\\t"\$7}' $ARGV[1] > $ARGV[1].bed`;
`perl $script_path/bin/combine_overlap.pl $ARGV[1].bed $ARGV[1].bed.cbi`;

#calculate the LAI score
my $age=0.8; #standard age for LAI calculation (MY)
$age=`awk '{if (\$12~/[0-9]+/)print \$12}' $ARGV[0]|awk 'NR == 1 { max=\$1; min=\$1; sum=0 } { if (\$1>max) max=\$1; if (\$1<min) min=\$1; sum+=\$1;}  END {printf sum/NR/1000000}'`;
`perl $script_path/bin/LAI_calc.pl -i $ARGV[0].bed.cbi -a $ARGV[1].bed.cbi -g $ARGV[2] -w $win -t $age > $ARGV[1].LAI`;

`rm $ARGV[0].bed $ARGV[0].bed.cbi $ARGV[1].bed $ARGV[1].bed.cbi`;
